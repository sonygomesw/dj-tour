import { useState } from 'react' import { GlassContainer } from './GlassContainer' import { Button } from './button' import { FileText, Download, Upload, Image as ImageIcon } from 'lucide-react' interface PresskitBuilderProps { onComplete: () => void } export function PresskitBuilder({ onComplete }: PresskitBuilderProps) { const [presskitData, setPresskitData] = useState({ djName: '', bio: '', genre: '', achievements: '', socialLinks: { instagram: '', soundcloud: '', spotify: '' } }) const [profileImage, setProfileImage] = useState<string | null>(null) const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => { const file = e.target.files?.[0] if (file) { const reader = new FileReader() reader.onload = (e) => { setProfileImage(e.target?.result as string) } reader.readAsDataURL(file) } } const generatePresskit = () => { // Logique pour générer le presskit onComplete() } return ( <GlassContainer className="p-6 max-w-4xl mx-auto"> <div className="space-y-6"> <div className="text-center"> <h2 className="text-2xl font-bold text-gray-900 mb-2"> Press Kit Builder </h2> <p className="text-gray-600"> Create a professional press kit to showcase your DJ brand </p> </div> <div className="grid grid-cols-1 md:grid-cols-2 gap-6"> {/* Profile Image */} <div className="space-y-4"> <h3 className="text-lg font-semibold text-gray-900"> Profile Image </h3> <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center"> {profileImage ? ( <img src={profileImage} alt="Profile"className="w-32 h-32 rounded-full mx-auto mb-4 object-cover"/> ) : ( <ImageIcon className="w-16 h-16 mx-auto mb-4 text-gray-400"/> )} <input type="file"accept="image/*"onChange={handleImageUpload} className="hidden"id="profile-upload"/> <label htmlFor="profile-upload"className="bg-violet-500 hover:bg-violet-600 text-white px-4 py-2 rounded-lg cursor-pointer inline-flex items-center"> <Upload className="w-4 h-4 mr-2"/> Upload Image </label> </div> </div> {/* Basic Info */} <div className="space-y-4"> <h3 className="text-lg font-semibold text-gray-900"> Basic Information </h3> <div className="space-y-3"> <input type="text"placeholder="DJ Name"value={presskitData.djName} onChange={(e) => setPresskitData({...presskitData, djName: e.target.value})} className="w-full bg-white/5 border border-white/10 rounded-lg py-3 px-4 text-gray-900 placeholder:text-gray-500"/> <input type="text"placeholder="Genre (e.g., House, Techno, Hip-Hop)"value={presskitData.genre} onChange={(e) => setPresskitData({...presskitData, genre: e.target.value})} className="w-full bg-white/5 border border-white/10 rounded-lg py-3 px-4 text-gray-900 placeholder:text-gray-500"/> <textarea placeholder="Bio (tell your story in 2-3 sentences)"value={presskitData.bio} onChange={(e) => setPresskitData({...presskitData, bio: e.target.value})} rows={4} className="w-full bg-white/5 border border-white/10 rounded-lg py-3 px-4 text-gray-900 placeholder:text-gray-500"/> </div> </div> </div> {/* Social Links */} <div className="space-y-4"> <h3 className="text-lg font-semibold text-gray-900"> Social Links </h3> <div className="grid grid-cols-1 md:grid-cols-3 gap-4"> <input type="url"placeholder="Instagram URL"value={presskitData.socialLinks.instagram} onChange={(e) => setPresskitData({ ...presskitData, socialLinks: {...presskitData.socialLinks, instagram: e.target.value} })} className="w-full bg-white/5 border border-white/10 rounded-lg py-3 px-4 text-gray-900 placeholder:text-gray-500"/> <input type="url"placeholder="SoundCloud URL"value={presskitData.socialLinks.soundcloud} onChange={(e) => setPresskitData({ ...presskitData, socialLinks: {...presskitData.socialLinks, soundcloud: e.target.value} })} className="w-full bg-white/5 border border-white/10 rounded-lg py-3 px-4 text-gray-900 placeholder:text-gray-500"/> <input type="url"placeholder="Spotify URL"value={presskitData.socialLinks.spotify} onChange={(e) => setPresskitData({ ...presskitData, socialLinks: {...presskitData.socialLinks, spotify: e.target.value} })} className="w-full bg-white/5 border border-white/10 rounded-lg py-3 px-4 text-gray-900 placeholder:text-gray-500"/> </div> </div> {/* Achievements */} <div className="space-y-4"> <h3 className="text-lg font-semibold text-gray-900"> Achievements & Highlights </h3> <textarea placeholder="List your notable gigs, awards, collaborations, or achievements"value={presskitData.achievements} onChange={(e) => setPresskitData({...presskitData, achievements: e.target.value})} rows={3} className="w-full bg-white/5 border border-white/10 rounded-lg py-3 px-4 text-gray-900 placeholder:text-gray-500"/> </div> {/* Actions */} <div className="flex justify-center space-x-4"> <Button onClick={generatePresskit} className="bg-gradient-to-r from-violet-500 to-fuchsia-500 hover:from-violet-600 hover:to-fuchsia-600"> <FileText className="w-4 h-4 mr-2"/> Generate Press Kit </Button> <Button variant="outline"onClick={onComplete} className="bg-white/5 border-white/10"> <Download className="w-4 h-4 mr-2"/> Download Template </Button> </div> </div> </GlassContainer> ) } 