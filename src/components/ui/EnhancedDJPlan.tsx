'use client' import { useState, useEffect } from 'react' import { motion, AnimatePresence } from 'framer-motion' import { GlassContainer } from './GlassContainer' import Badge from './badge' import { Button } from './button' import { ProgressBar } from './ProgressBar' import { DJRoadmap } from './DJRoadmap' import { EmailTemplateBlock } from './EmailTemplateBlock' import { ContextualEmailTemplates } from './ContextualEmailTemplates' import { AIProfileAnalysis } from './AIProfileAnalysis' import { PresskitBuilder } from './PresskitBuilder' import { ContactFinderTool } from './ContactFinderTool' import { Modal } from './Modal' import { supabase } from '@/lib/supabase' // Import yearlyMissions directly in the component to avoid webpack issues import { CheckCircle, Circle, Star, Trophy, Target, Calendar, MapPin, Zap, Award, TrendingUp, Mail, Brain, FileText, Users, Camera, Music, Wrench, Play, Upload, Sparkles, Instagram, Eye, ChevronRight, ChevronDown, Lightbulb, Rocket, Settings, MessageCircle, Clock, CheckSquare, ArrowRight } from 'lucide-react' interface EnhancedMission { id: string title: string description: string day: number week: number difficulty: 'easy' | 'medium' | 'hard' category: 'technical' | 'marketing' | 'networking' | 'performance' | 'business' | 'onboarding' xp: number completed: boolean completedAt?: Date tool?: 'email-template' | 'ai-profile-analysis' | 'presskit-builder' | 'contact-finder' | 'first-steps' toolData?: any steps?: string[] tips?: string[] resources?: Array<{ title: string url: string type: 'video' | 'article' | 'tool' | 'template' }> contextualContent?: { type: 'ai-analysis' | 'email-templates' | 'presskit-examples' | 'contact-finder' data?: any } aifeedback?: string instantAction?: { type: 'email' | 'dm' | 'presskit' | 'contact' | 'analysis' label: string data?: any } isPremium?: boolean premiumTier?: 'pro' | 'elite' | 'master' season?: 1 | 2 } interface UserStats { totalXP: number level: number currentWeek: number completedMissions: number totalMissions: number streak: number weeklyProgress: number } interface EnhancedDJPlanProps { djLevel: string userId?: string } const levelConfig = { beginner: { title: 'Beginner DJ', color: 'from-green-500 to-emerald-600', icon: '🎧', description: 'Starting your DJ journey' }, intermediate: { title: 'Intermediate DJ', color: 'from-blue-500 to-cyan-600', icon: '🎵', description: 'Developing your skills' }, advanced: { title: 'Advanced DJ', color: 'from-purple-500 to-pink-600', icon: '🎪', description: 'Mastering your craft' } } const categoryColors = { onboarding: 'bg-gradient-to-r from-violet-500/20 to-purple-500/20 text-violet-400', technical: 'bg-gradient-to-r from-blue-500/20 to-cyan-500/20 text-blue-400', marketing: 'bg-gradient-to-r from-pink-500/20 to-rose-500/20 text-pink-400', networking: 'bg-gradient-to-r from-green-500/20 to-emerald-500/20 text-green-400', performance: 'bg-gradient-to-r from-yellow-500/20 to-orange-500/20 text-yellow-400', business: 'bg-gradient-to-r from-purple-500/20 to-indigo-500/20 text-purple-400' } const categoryIcons = { onboarding: <Rocket className="w-4 h-4"/>, technical: <Settings className="w-4 h-4"/>, marketing: <TrendingUp className="w-4 h-4"/>, networking: <Users className="w-4 h-4"/>, performance: <Star className="w-4 h-4"/>, business: <Trophy className="w-4 h-4"/> } export function EnhancedDJPlan({ djLevel, userId }: EnhancedDJPlanProps) { const [missions, setMissions] = useState<EnhancedMission[]>([]) const [userStats, setUserStats] = useState<UserStats>({ totalXP: 0, level: 1, currentWeek: 0, completedMissions: 0, totalMissions: 0, streak: 0, weeklyProgress: 0 }) const [expandedMissions, setExpandedMissions] = useState<Set<string>>(new Set()) const [activeWeek, setActiveWeek] = useState(0) const [showTool, setShowTool] = useState<{ type: string missionId: string data?: any } | null>(null) const [aiResponse, setAiResponse] = useState<string>('') const [showAiFeedback, setShowAiFeedback] = useState<string | null>(null) const [celebrationEffect, setCelebrationEffect] = useState<{ show: boolean xp: number position: { x: number, y: number } }>({ show: false, xp: 0, position: { x: 0, y: 0 } }) const [currentSeason, setCurrentSeason] = useState<1 | 2>(1) const [userPremiumTier, setUserPremiumTier] = useState<'free' | 'pro' | 'elite' | 'master'>('free') const levelInfo = levelConfig[djLevel as keyof typeof levelConfig] || levelConfig.beginner useEffect(() => { generateEnhancedMissions() loadProgress() }, [djLevel, userId]) // Auto-navigate to the next unlocked week when missions are completed useEffect(() => { const nextWeek = getNextUnlockedWeek() if (nextWeek !== activeWeek && isWeekUnlocked(nextWeek)) { setActiveWeek(nextWeek) } }, [userStats.completedMissions]) const generateEnhancedMissions = () => { // Complete 52-week DJ development program based on existing missions const yearlyMissions = [ // Week 0: Your First Steps (Onboarding) { title: 'Welcome to your DJ journey!', description: 'Get familiar with the platform and set your goals', category: 'onboarding', difficulty: 'easy', xp: 25, week: 0, tool: 'first-steps' as const, steps: [ 'Complete your profile setup', 'Set your DJ goals', 'Choose your preferred music genre', 'Explore the platform features' ] }, { title: 'AI Profile Analysis', description: 'Upload screenshots of your Instagram, Spotify, and TikTok profiles for AI analysis', category: 'onboarding', difficulty: 'easy', xp: 100, week: 0, tool: 'ai-profile-analysis' as const, steps: [ 'Take screenshots of your Instagram profile', 'Capture your Spotify for Artists dashboard', 'Screenshot your TikTok analytics', 'Upload and analyze each platform' ] }, { title: 'Set up your DJ workspace', description: 'Organize your equipment and create a dedicated mixing space', category: 'technical', difficulty: 'easy', xp: 75, week: 0, steps: [ 'Organize your DJ equipment', 'Set up proper lighting', 'Test audio connections', 'Create a comfortable workspace' ] }, // Week 1: Foundation & Profile Setup { title: 'Instagram & TikTok Setup', description: 'Create or optimize your Instagram + TikTok profile with a clear bio, HD photo, and music links', category: 'marketing', difficulty: 'easy', xp: 100, week: 1, steps: [ 'Create/optimize Instagram profile', 'Create/optimize TikTok profile', 'Add professional bio', 'Upload HD photo' ] }, { title: 'Spotify for Artists', description: 'Create a Spotify for Artists account with a pro photo, bio, and at least 1 track/mix', category: 'marketing', difficulty: 'easy', xp: 150, week: 1, steps: [ 'Create Spotify for Artists account', 'Add professional photo', 'Write complete bio', 'Upload at least 1 track/mix' ] }, { title: 'Social Bio Optimization', description: 'Improve your Instagram and TikTok bios with clear CTAs and professional information', category: 'marketing', difficulty: 'easy', xp: 100, week: 1, steps: [ 'Add music style + location', 'Create Linktree', 'Add clear CTA', 'Remove unnecessary info' ] }, // Week 2: Content Creation Setup { title: 'CapCut Template', description: 'Install CapCut and create an editing template with proper cuts and transitions', category: 'technical', difficulty: 'medium', xp: 150, week: 2, steps: [ 'Install CapCut', 'Create base template', 'Configure transitions', 'Prepare styled subtitles' ] }, { title: 'Niche Analysis', description: 'Identify 3 DJs in your niche and analyze their visual style, TikTok formats, bio, and branding', category: 'marketing', difficulty: 'medium', xp: 200, week: 2, steps: [ 'Identify 3 DJs in your niche', 'Analyze their visual style', 'Study their TikTok formats', 'Note their branding and bio' ] }, { title: 'Niche DJ Research', description: 'Identify and analyze 10 currently booked DJs in your niche', category: 'marketing', difficulty: 'medium', xp: 200, week: 2, steps: [ 'Find 10 active DJs', 'Analyze their content', 'Note common patterns', 'Adapt findings to your profile' ] }, // Week 3: Content Production { title: '7 Days TikTok', description: 'Post 1 TikTok per day for 7 days after scrolling 20-30 min in your niche', category: 'marketing', difficulty: 'medium', xp: 300, week: 3, steps: [ 'Scroll 20-30 min in your niche', 'Prepare 7 video concepts', 'Post 1 TikTok daily', 'Analyze performance' ] }, { title: 'DJ Set Video', description: 'Film or edit a DJ set with CapCut (30 sec to 1 min, can be filmed at home)', category: 'technical', difficulty: 'medium', xp: 250, week: 3, steps: [ 'Prepare video setup', 'Record DJ set', 'Edit with CapCut', 'Optimize audio quality' ] }, // Week 4: Instagram Content { title: '7 Days Stories', description: 'Post 1 story per day for 7 days on Instagram (behind the scenes, mix, artist life)', category: 'marketing', difficulty: 'easy', xp: 200, week: 4, steps: [ 'Plan 7 story types', 'Prepare content', 'Post daily', 'Interact with responses' ] }, { title: 'Instagram Creator Mode', description: 'Activate and optimize Instagram creator mode with professional features', category: 'marketing', difficulty: 'easy', xp: 100, week: 4, steps: [ 'Activate statistics', 'Add booking buttons', 'Monitor performance', 'Optimize profile' ] }, { title: 'Pinned Content Strategy', description: 'Create and pin 3 key pieces of content on Instagram to showcase your DJ profile', category: 'marketing', difficulty: 'medium', xp: 250, week: 4, steps: [ 'Create mix video', 'Write about post', 'Share recent edit', 'Pin strategically' ] }, // Week 5: Press Kit & Professional Materials { title: 'Press Kit', description: 'Create a mini press kit in PDF or Notion with bio, photos, video links, and key stats', category: 'business', difficulty: 'medium', xp: 200, week: 5, tool: 'presskit-builder' as const, steps: [ 'Write pro bio', 'Select best photos', 'Add video links', 'Compile key stats' ] }, { title: 'Electronic Press Kit', description: 'Create a mini EPK with bio, photos, DJ set video, and social links', category: 'business', difficulty: 'medium', xp: 250, week: 5, steps: [ 'Write short bio', 'Select 3 pro photos', 'Include DJ set video', 'Add social links' ] }, // Week 6: Fan Engagement { title: 'Fan Accounts', description: 'Create 2 fan accounts (TikTok / Insta) and repost your content daily', category: 'marketing', difficulty: 'medium', xp: 200, week: 6, steps: [ 'Create TikTok fan account', 'Create Instagram fan account', 'Plan reposts', 'Engage with community' ] }, { title: 'Engagement Hour', description: 'Respond to all comments on your videos for 1 hour after posting to boost algorithm visibility', category: 'marketing', difficulty: 'easy', xp: 100, week: 6, steps: [ 'Set post reminder', 'Reply to comments', 'Add value in responses', 'Track engagement metrics' ] }, // Week 7: Music Production { title: 'TikTok Remix', description: 'Prepare a"TikTok remix"version of a trending song to ride the algorithm', category: 'technical', difficulty: 'hard', xp: 300, week: 7, steps: [ 'Identify trending song', 'Create remix', 'Prepare video', 'Optimize for TikTok' ] }, { title: '5-Minute Mix', description: 'Create a 5-minute audio mix showcasing your style for promotional messages', category: 'technical', difficulty: 'medium', xp: 200, week: 7, steps: [ 'Select tracks', 'Record mix', 'Upload to platform', 'Share in outreach' ] }, // Week 8: Database & Contact Building { title: 'Club Database', description: 'Create a Google Sheet to track target clubs with detailed information', category: 'business', difficulty: 'easy', xp: 150, week: 8, steps: [ 'Set up spreadsheet structure', 'Add club information', 'Include contact details', 'Track outreach status' ] }, { title: 'Club Scraping', description: 'Scrape 100 club emails in your niche/style (focus on owners/talent buyers)', category: 'business', difficulty: 'hard', xp: 300, week: 8, tool: 'contact-finder' as const, steps: [ 'Identify 100 target clubs', 'Find direct contacts', 'Organize database', 'Verify emails' ] }, // Week 9: Email Outreach { title: 'Email Campaign', description: 'Send 100 emails to clubs with your press kit + DJ set video', category: 'business', difficulty: 'hard', xp: 400, week: 9, tool: 'email-template' as const, steps: [ 'Create email template', 'Personalize each message', 'Attach press kit and videos', 'Send 100 emails' ] }, { title: 'Club DM Campaign', description: 'Send 20 professional DM messages to clubs on Instagram', category: 'business', difficulty: 'medium', xp: 200, week: 9, steps: [ 'Prepare message template', 'Send personalized DMs', 'Track in database', 'Follow up strategically' ] }, // Week 10: Follow-up & Optimization { title: 'Club Follow-up', description: 'Follow up with clubs after 7 days with a short and professional message', category: 'business', difficulty: 'medium', xp: 200, week: 10, steps: [ 'Prepare follow-up message', 'Track responses', 'Time follow-ups correctly', 'Note feedback' ] }, { title: 'Voice Message Campaign', description: 'Send 1 personalized voice message per day to DJs, clubs, or organizers', category: 'business', difficulty: 'medium', xp: 200, week: 10, steps: [ 'Prepare script outline', 'Record messages', 'Track responses', 'Follow up effectively' ] }, // Week 11: Content Scaling { title: '10 New Videos', description: 'Add 10 new videos to your TikTok (POV, remix, DJ set) for more visibility', category: 'marketing', difficulty: 'hard', xp: 500, week: 11, steps: [ 'Plan 10 concepts', 'Create videos', 'Optimize each post', 'Analyze performance' ] }, { title: 'Daily TikTok Hooks', description: 'Test one TikTok hook per day about your DJ journey and experiences', category: 'marketing', difficulty: 'medium', xp: 300, week: 11, steps: [ 'Write hook scripts', 'Film daily content', 'Track performance', 'Optimize successful hooks' ] }, // Week 12: Networking & Collaborations { title: 'DJ Collaborations', description: 'Contact 5 DJs in your niche for collabs or cross-promo', category: 'networking', difficulty: 'hard', xp: 300, week: 12, steps: [ 'Identify 5 potential DJs', 'Propose concrete collabs', 'Plan actions', 'Execute collaborations' ] }, { title: 'Strategic Following', description: 'Filter and engage with DJs, bookers, and active fans from your followers', category: 'networking', difficulty: 'medium', xp: 200, week: 12, steps: [ 'Identify key followers', 'Engage with content', 'Send strategic messages', 'Build relationships' ] }, // Week 13-52: Advanced missions continue... // Adding more missions to reach 52 weeks { title: 'Show Highlight Reel', description: 'Film a real or recreated show highlight reel', category: 'performance', difficulty: 'hard', xp: 300, week: 13 }, { title: 'DJ Intro Video', description: 'Create a short intro video highlighting your experience', category: 'marketing', difficulty: 'medium', xp: 200, week: 13 }, { title: 'Free Show Strategy', description: 'Propose a free show to build credibility', category: 'business', difficulty: 'medium', xp: 200, week: 14 }, { title: 'Behind the DJ Series', description: 'Launch a behind-the-scenes content series', category: 'marketing', difficulty: 'medium', xp: 400, week: 15 }, { title: 'BOOK ME Landing Page', description: 'Create a professional booking landing page', category: 'business', difficulty: 'medium', xp: 300, week: 16 }, { title: 'Mini Tour Planning', description: 'Plan a mini tour with 3 local venues', category: 'business', difficulty: 'hard', xp: 500, week: 17 }, { title: 'Q&A Story Series', description: 'Create engaging Q&A content about your DJ journey', category: 'marketing', difficulty: 'medium', xp: 200, week: 18 }, { title: 'International DJ Spotlight', description: 'Connect with DJs from other countries', category: 'networking', difficulty: 'easy', xp: 150, week: 19 }, { title: 'Testimonial Collection', description: 'Gather testimonials from clients and fellow DJs', category: 'business', difficulty: 'medium', xp: 200, week: 20 }, { title: 'DJ Career TikTok', description: 'Create content about your DJ journey', category: 'marketing', difficulty: 'medium', xp: 200, week: 21 }, { title: 'Fee Goal Setting', description: 'Set and plan your ideal booking fee goals', category: 'business', difficulty: 'medium', xp: 150, week: 22 }, { title: 'Monthly Mix Series', description: 'Create a consistent monthly mix series', category: 'technical', difficulty: 'hard', xp: 400, week: 23 }, { title: 'Podcast Launch', description: 'Start a DJ podcast with industry insights', category: 'marketing', difficulty: 'hard', xp: 500, week: 24 }, { title: 'Live Stream Setup', description: 'Set up regular live streaming', category: 'technical', difficulty: 'medium', xp: 300, week: 25 }, { title: 'Music Video Creation', description: 'Create a professional music video', category: 'technical', difficulty: 'hard', xp: 600, week: 26 }, { title: 'DJ Agency Outreach', description: 'Contact agencies for representation', category: 'business', difficulty: 'hard', xp: 400, week: 27 }, { title: 'Festival Applications', description: 'Apply to music festivals', category: 'business', difficulty: 'hard', xp: 500, week: 28 }, { title: 'Merchandise Launch', description: 'Create and launch DJ merchandise', category: 'business', difficulty: 'medium', xp: 350, week: 29 }, { title: 'Sponsorship Proposals', description: 'Reach out to brands for sponsorships', category: 'business', difficulty: 'hard', xp: 450, week: 30 }, { title: 'Industry Conference', description: 'Attend a music industry conference', category: 'networking', difficulty: 'hard', xp: 600, week: 31 }, { title: 'Mentor Connection', description: 'Find an established DJ mentor', category: 'networking', difficulty: 'medium', xp: 300, week: 32 }, { title: 'DJ Community Building', description: 'Create or join local DJ communities', category: 'networking', difficulty: 'medium', xp: 350, week: 33 }, { title: 'Record Label Outreach', description: 'Submit tracks to record labels', category: 'business', difficulty: 'hard', xp: 500, week: 34 }, { title: 'Signature Set Development', description: 'Develop your signature 60-minute set', category: 'performance', difficulty: 'hard', xp: 400, week: 35 }, { title: 'Technical Skills Upgrade', description: 'Master advanced DJ techniques', category: 'technical', difficulty: 'hard', xp: 450, week: 36 }, { title: 'Multi-Genre Mixing', description: 'Develop skills in mixing different genres', category: 'technical', difficulty: 'medium', xp: 300, week: 37 }, { title: 'Crowd Reading Mastery', description: 'Study crowd reading techniques', category: 'performance', difficulty: 'medium', xp: 250, week: 38 }, { title: 'YouTube Channel Launch', description: 'Launch and optimize a YouTube channel', category: 'marketing', difficulty: 'medium', xp: 400, week: 39 }, { title: 'Educational Content Series', description: 'Create DJ tutorial content', category: 'marketing', difficulty: 'medium', xp: 350, week: 40 }, { title: 'Remix Competition', description: 'Participate in online remix competitions', category: 'technical', difficulty: 'hard', xp: 500, week: 41 }, { title: 'Collaborative Album', description: 'Work on a collaborative album', category: 'technical', difficulty: 'hard', xp: 600, week: 42 }, { title: 'International Booking', description: 'Secure your first international booking', category: 'business', difficulty: 'hard', xp: 700, week: 43 }, { title: 'Radio Show Pitch', description: 'Pitch your show to radio stations', category: 'business', difficulty: 'medium', xp: 300, week: 44 }, { title: 'Music Licensing', description: 'License your music for commercial use', category: 'business', difficulty: 'medium', xp: 350, week: 45 }, { title: 'DJ Residency', description: 'Secure a regular DJ residency', category: 'business', difficulty: 'hard', xp: 500, week: 46 }, { title: 'Industry Article', description: 'Write for a music industry publication', category: 'marketing', difficulty: 'medium', xp: 400, week: 47 }, { title: 'Masterclass Creation', description: 'Create a DJ masterclass', category: 'business', difficulty: 'hard', xp: 500, week: 48 }, { title: 'Award Submissions', description: 'Submit work to industry awards', category: 'business', difficulty: 'medium', xp: 300, week: 49 }, { title: 'Media Interviews', description: 'Secure interviews with music blogs', category: 'marketing', difficulty: 'medium', xp: 350, week: 50 }, { title: 'Annual Review', description: 'Complete comprehensive career review', category: 'business', difficulty: 'medium', xp: 300, week: 51 }, { title: 'Next Year Strategy', description: 'Plan strategy for the upcoming year', category: 'business', difficulty: 'medium', xp: 400, week: 52 } ] // Generate missions from the data const allMissions: EnhancedMission[] = [] let missionId = 1 yearlyMissions.forEach((mission, index) => { allMissions.push({ id: `mission-${missionId}`, title: mission.title, description: mission.description, day: (index % 7) + 1, // Distribute across 7 days per week week: mission.week, difficulty: mission.difficulty as 'easy' | 'medium' | 'hard', category: mission.category as any, xp: mission.xp, completed: false, tool: mission.tool, steps: mission.steps || [ 'Research and prepare', 'Execute the main task', 'Review and optimize', 'Document results' ], tips: [ 'Take your time to do this properly', 'Quality over quantity', 'Document your progress for future reference' ] }) missionId++ }) // Season 2: Advanced DJ Mastery (Weeks 53-104) - Premium Content const season2Missions = [ // International Expansion (Weeks 53-65) { title: 'Build International Press Kit', description: 'Create a professional press kit for international markets with multi-language content', category: 'marketing', difficulty: 'hard', xp: 200, week: 53, tool: 'presskit-builder' as const, isPremium: true, premiumTier: 'pro' as const, season: 2 as const }, { title: 'Master English DJ Terminology', description: 'Learn essential English terms and phrases for international DJ communications', category: 'business', difficulty: 'medium', xp: 150, week: 53, isPremium: true, premiumTier: 'pro' as const, season: 2 as const }, { title: 'Research International Markets', description: 'Deep dive into Ibiza, Berlin, Miami, and other key DJ markets', category: 'business', difficulty: 'hard', xp: 250, week: 54, isPremium: true, premiumTier: 'pro' as const, season: 2 as const }, { title: 'Create Visa & Work Permit Strategy', description: 'Understand legal requirements for working as DJ internationally', category: 'business', difficulty: 'hard', xp: 200, week: 55, isPremium: true, premiumTier: 'elite' as const, season: 2 as const }, { title: 'Build International Booker Network', description: 'Connect with 50+ international booking agents and promoters', category: 'networking', difficulty: 'hard', xp: 300, week: 56, tool: 'contact-finder' as const, isPremium: true, premiumTier: 'elite' as const, season: 2 as const }, // Advanced Technical Mastery (Weeks 66-78) { title: 'Master Advanced Mixing Techniques', description: 'Learn harmonic mixing, phrase matching, and advanced transitions', category: 'technical', difficulty: 'hard', xp: 400, week: 66, isPremium: true, premiumTier: 'pro' as const, season: 2 as const }, { title: 'Advanced CDJ-3000 Mastery', description: 'Master every feature of the industry-standard CDJ-3000', category: 'technical', difficulty: 'hard', xp: 350, week: 69, isPremium: true, premiumTier: 'pro' as const, season: 2 as const }, { title: 'Live Streaming Setup & OBS', description: 'Create professional live streaming setup for online performances', category: 'technical', difficulty: 'hard', xp: 300, week: 72, isPremium: true, premiumTier: 'pro' as const, season: 2 as const }, { title: 'Create Signature Sound & Style', description: 'Develop your unique DJ identity and signature sound', category: 'performance', difficulty: 'hard', xp: 500, week: 76, isPremium: true, premiumTier: 'elite' as const, season: 2 as const }, // Business & Revenue Optimization (Weeks 79-91) { title: 'Create Multiple Revenue Streams', description: 'Build 5+ income sources: gigs, courses, merchandise, affiliate, consulting', category: 'business', difficulty: 'hard', xp: 600, week: 79, isPremium: true, premiumTier: 'elite' as const, season: 2 as const }, { title: 'Master DJ Pricing Psychology', description: 'Learn advanced pricing strategies to maximize your booking rates', category: 'business', difficulty: 'hard', xp: 400, week: 80, isPremium: true, premiumTier: 'elite' as const, season: 2 as const }, { title: 'Build VIP Client Relationships', description: 'Create exclusive packages for high-value clients and repeat bookings', category: 'business', difficulty: 'hard', xp: 500, week: 82, isPremium: true, premiumTier: 'master' as const, season: 2 as const }, { title: 'Launch DJ Academy/Courses', description: 'Create and sell your own DJ courses and educational content', category: 'business', difficulty: 'hard', xp: 800, week: 85, isPremium: true, premiumTier: 'master' as const, season: 2 as const }, // Industry Authority & Legacy (Weeks 92-104) { title: 'Create Industry Masterclasses', description: 'Develop premium masterclasses for aspiring DJs', category: 'business', difficulty: 'hard', xp: 1000, week: 92, isPremium: true, premiumTier: 'master' as const, season: 2 as const }, { title: 'Build Media Presence & Interviews', description: 'Get featured in major DJ magazines and podcasts', category: 'marketing', difficulty: 'hard', xp: 600, week: 93, isPremium: true, premiumTier: 'master' as const, season: 2 as const }, { title: 'Master Festival Applications', description: 'Get booked at major festivals: Tomorrowland, Ultra, EDC', category: 'networking', difficulty: 'hard', xp: 1500, week: 94, isPremium: true, premiumTier: 'master' as const, season: 2 as const }, { title: 'Build DJ Legacy Projects', description: 'Create lasting impact through mentorship and industry contributions', category: 'business', difficulty: 'hard', xp: 2000, week: 102, isPremium: true, premiumTier: 'master' as const, season: 2 as const }, { title: 'Launch DJ Hall of Fame Entry', description: 'Achieve legendary status and industry recognition', category: 'performance', difficulty: 'hard', xp: 5000, week: 104, isPremium: true, premiumTier: 'master' as const, season: 2 as const } ] // Process Season 2 missions season2Missions.forEach(mission => { allMissions.push({ id: `mission-${missionId}`, title: mission.title, description: mission.description, day: (missionId % 7) + 1, week: mission.week, difficulty: mission.difficulty as 'easy' | 'medium' | 'hard', category: mission.category as any, xp: mission.xp, completed: false, tool: mission.tool, isPremium: mission.isPremium, premiumTier: mission.premiumTier, season: mission.season, steps: [ 'Research advanced techniques', 'Practice with professional tools', 'Get expert feedback', 'Apply in real scenarios' ], tips: [ 'This is advanced content - take your time', 'Professional results require professional effort', 'Connect with industry mentors for guidance' ] }) missionId++ }) setMissions(allMissions) } const loadProgress = async () => { if (!userId) { setUserStats({ totalXP: 0, level: 1, currentWeek: 0, completedMissions: 0, totalMissions: missions.length, streak: 0, weeklyProgress: 0 }) return } try { const { data, error } = await supabase .from('user_missions') .select('*') .eq('user_id', userId) if (error) throw error const completed = new Set(data?.map(m => m.mission_id) || []) const xp = data?.reduce((sum, m) => sum + (m.xp || 0), 0) || 0 // Calculate current week and level const completedMissionIds = Array.from(completed) const lastCompletedMission = completedMissionIds.length > 0 ? completedMissionIds[completedMissionIds.length - 1] : null let currentWeek = 0 if (lastCompletedMission) { const lastMission = missions.find(m => m.id === lastCompletedMission) if (lastMission) { currentWeek = lastMission.week } } setUserStats(prev => ({ ...prev, completedMissions: completed.size, totalXP: xp, currentWeek: currentWeek, totalMissions: missions.length })) setActiveWeek(currentWeek) // Calculate level const totalXpForLevel = [ { level: 1, minXP: 0 }, { level: 2, minXP: 1000 }, { level: 3, minXP: 3000 }, { level: 4, minXP: 6000 }, { level: 5, minXP: 10000 }, { level: 6, minXP: 15000 }, { level: 7, minXP: 21000 }, { level: 8, minXP: 28000 }, { level: 9, minXP: 36000 }, { level: 10, minXP: 45000 }, { level: 11, minXP: 55000 }, { level: 12, minXP: 66000 }, { level: 13, minXP: 78000 }, { level: 14, minXP: 91000 }, { level: 15, minXP: 105000 }, { level: 16, minXP: 120000 }, { level: 17, minXP: 136000 }, { level: 18, minXP: 153000 }, { level: 19, minXP: 171000 }, { level: 20, minXP: 190000 }, { level: 21, minXP: 210000 }, { level: 22, minXP: 231000 }, { level: 23, minXP: 253000 }, { level: 24, minXP: 276000 }, { level: 25, minXP: 300000 }, { level: 26, minXP: 325000 }, { level: 27, minXP: 351000 }, { level: 28, minXP: 378000 }, { level: 29, minXP: 406000 }, { level: 30, minXP: 435000 }, { level: 31, minXP: 465000 }, { level: 32, minXP: 496000 }, { level: 33, minXP: 528000 }, { level: 34, minXP: 561000 }, { level: 35, minXP: 595000 }, { level: 36, minXP: 630000 }, { level: 37, minXP: 666000 }, { level: 38, minXP: 703000 }, { level: 39, minXP: 741000 }, { level: 40, minXP: 780000 }, { level: 41, minXP: 820000 }, { level: 42, minXP: 861000 }, { level: 43, minXP: 903000 }, { level: 44, minXP: 946000 }, { level: 45, minXP: 990000 }, { level: 46, minXP: 1035000 }, { level: 47, minXP: 1081000 }, { level: 48, minXP: 1128000 }, { level: 49, minXP: 1176000 }, { level: 50, minXP: 1225000 }, { level: 51, minXP: 1275000 }, { level: 52, minXP: 1326000 } ] let currentLevel = 1 for (const level of totalXpForLevel) { if (xp >= level.minXP) { currentLevel = level.level } else { break } } setUserStats(prev => ({ ...prev, level: currentLevel })) } catch (error) { console.error('Error loading progress:', error) } finally { // setLoading(false) // This state was removed } } const completeMission = async (missionId: string) => { const mission = missions.find(m => m.id === missionId) if (!mission) return // Update mission as completed setMissions(prev => prev.map(m => m.id === missionId ? { ...m, completed: true, completedAt: new Date() } : m )) setUserStats(prev => ({ ...prev, completedMissions: prev.completedMissions + 1, totalXP: prev.totalXP + mission.xp })) // Generate AI feedback with celebration effect const aiFeedback = generateAIFeedback(mission) // Trigger celebration animation triggerCelebrationEffect(mission.xp) // Show feedback after brief delay for effect setTimeout(() => { setShowAiFeedback(aiFeedback) }, 800) if (userId) { try { await supabase .from('user_missions') .upsert({ user_id: userId, mission_id: missionId, completed: true, completed_at: new Date().toISOString(), xp: mission.xp }) } catch (error) { console.error('Error saving mission progress:', error) } } } const generateAIFeedback = (mission: EnhancedMission) => { const feedbacks = [ `🎯 Excellent! You've completed"${mission.title}". This ${mission.difficulty} mission just earned you ${mission.xp} XP and brings you closer to your DJ goals.`, `🔥 Great work on"${mission.title}"! Your ${mission.category} skills are improving. Keep building momentum with the next mission.`, `⚡ Mission"${mission.title}"completed! You're developing strong ${mission.category} foundations. Ready for the next challenge?`, `🎧 Fantastic!"${mission.title}"is done. Your dedication to ${mission.category} development is paying off. What's next?`, `🚀 Well done!"${mission.title}"complete. You've gained ${mission.xp} XP and strengthened your ${mission.category} game.` ] return feedbacks[Math.floor(Math.random() * feedbacks.length)] } const handleInstantAction = (mission: EnhancedMission) => { if (!mission.instantAction) return switch (mission.instantAction.type) { case 'email': setShowTool({ type: 'email-template', missionId: mission.id, data: mission.instantAction.data }) break case 'presskit': setShowTool({ type: 'presskit-builder', missionId: mission.id }) break case 'contact': setShowTool({ type: 'contact-finder', missionId: mission.id }) break case 'analysis': setShowTool({ type: 'ai-profile-analysis', missionId: mission.id }) break default: completeMission(mission.id) } } const triggerCelebrationEffect = (xp: number) => { // Get random position for celebration const x = Math.random() * (window.innerWidth - 200) + 100 const y = Math.random() * (window.innerHeight - 200) + 100 setCelebrationEffect({ show: true, xp, position: { x, y } }) // Auto-hide after animation setTimeout(() => { setCelebrationEffect(prev => ({ ...prev, show: false })) }, 2000) // Play celebration sound (optional) if (typeof window !== 'undefined' && window.AudioContext) { try { const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)() const oscillator = audioContext.createOscillator() const gainNode = audioContext.createGain() oscillator.connect(gainNode) gainNode.connect(audioContext.destination) oscillator.frequency.setValueAtTime(800, audioContext.currentTime) oscillator.frequency.exponentialRampToValueAtTime(1200, audioContext.currentTime + 0.1) oscillator.frequency.exponentialRampToValueAtTime(600, audioContext.currentTime + 0.2) gainNode.gain.setValueAtTime(0.3, audioContext.currentTime) gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.3) oscillator.start(audioContext.currentTime) oscillator.stop(audioContext.currentTime + 0.3) } catch (e) { // Fallback: no sound if audio context fails } } } const toggleMissionExpansion = (missionId: string) => { setExpandedMissions(prev => { const newSet = new Set(prev) if (newSet.has(missionId)) { newSet.delete(missionId) } else { newSet.add(missionId) } return newSet }) } const getWeekMissions = (week: number) => { return missions.filter(m => m.week === week) } const getCompletionRate = () => { if (missions.length === 0) return 0 return (userStats.completedMissions / missions.length) * 100 } const getCurrentDay = () => { return userStats.completedMissions + 1 } const getWeekProgress = (week: number) => { const weekMissions = getWeekMissions(week) if (weekMissions.length === 0) return 0 const completedInWeek = weekMissions.filter(m => missions.find(mission => mission.id === m.id && mission.completed)).length return (completedInWeek / weekMissions.length) * 100 } const isWeekUnlocked = (week: number) => { // Week 0 (First Steps) is always unlocked if (week === 0) return true // Week 1 is unlocked after completing at least 50% of Week 0 if (week === 1) { const week0Progress = getWeekProgress(0) return week0Progress >= 50 } // Season 2 unlock logic (Week 53+) if (week >= 53) { // Season 2 unlocks when Season 1 is 80% complete const season1Missions = missions.filter(m => !m.season || m.season === 1) const season1Completed = season1Missions.filter(m => m.completed).length const season1Progress = season1Missions.length > 0 ? (season1Completed / season1Missions.length) * 100 : 0 if (season1Progress < 80) return false // Check if user has premium access if (userPremiumTier === 'free') return false // Check tier requirements for specific weeks const weekMissions = getWeekMissions(week) if (weekMissions.length > 0) { const requiredTier = weekMissions[0].premiumTier if (requiredTier === 'elite' && !['elite', 'master'].includes(userPremiumTier)) return false if (requiredTier === 'master' && userPremiumTier !== 'master') return false } // Season 2 progression: 70% of previous week if (week > 53) { const previousWeekProgress = getWeekProgress(week - 1) return previousWeekProgress >= 70 } return true // Week 53 unlocks when Season 1 is 80% complete } // Season 1 weeks unlock when 70% of previous week is completed const previousWeekProgress = getWeekProgress(week - 1) return previousWeekProgress >= 70 } const getNextUnlockedWeek = () => { for (let week = 0; week <= 104; week++) { // Extended to include Season 2 if (isWeekUnlocked(week) && getWeekMissions(week).length > 0) { // If this week has incomplete missions, return it if (getWeekProgress(week) < 100) { return week } } else if (getWeekMissions(week).length > 0) { // This is the first locked week with content return week - 1 // Return the previous week that should be completed first } } return activeWeek } const getCurrentSeason = () => { return activeWeek >= 53 ? 2 : 1 } const getSeasonProgress = (season: 1 | 2) => { const seasonMissions = missions.filter(m => (m.season || 1) === season) const completedSeason = seasonMissions.filter(m => m.completed).length return seasonMissions.length > 0 ? (completedSeason / seasonMissions.length) * 100 : 0 } if (userStats.totalXP === 0 && !userId) { // Only show loading if no user is logged in return ( <div className="flex min-h-screen items-center justify-center"> <div className="text-center"> <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-violet-500 mx-auto mb-4"></div> <div className="text-xl text-gray-900">Loading your personalized DJ plan...</div> </div> </div> ) } return ( <div className="space-y-8"> {/* Enhanced Header */} <GlassContainer className="p-8"> <div className="flex items-center justify-between mb-6"> <div className="flex items-center space-x-4"> <div className={`w-20 h-20 rounded-2xl bg-gradient-to-r ${levelConfig[djLevel as keyof typeof levelConfig].color} flex items-center justify-center text-3xl shadow-lg`}> {levelConfig[djLevel as keyof typeof levelConfig].icon} </div> <div> <h2 className="text-3xl font-bold text-gray-900">{levelConfig[djLevel as keyof typeof levelConfig].title}</h2> <p className="text-gray-600 text-lg">{levelConfig[djLevel as keyof typeof levelConfig].description}</p> <div className="flex items-center mt-2 space-x-4"> <div className="flex items-center bg-violet-100 rounded-full px-3 py-1"> <Zap className="w-4 h-4 mr-1 text-violet-500"/> <span className="font-semibold text-violet-700">{userStats.totalXP.toLocaleString()} XP</span> </div> <div className="flex items-center bg-green-100 rounded-full px-3 py-1"> <CheckCircle className="w-4 h-4 mr-1 text-green-500"/> <span className="font-semibold text-green-700">{userStats.completedMissions} missions</span> </div> <div className="flex items-center bg-blue-100 rounded-full px-3 py-1"> <Award className="w-4 h-4 mr-1 text-blue-500"/> <span className="font-semibold text-blue-700">Level {userStats.level}</span> </div> <div className="flex items-center bg-orange-100 rounded-full px-3 py-1"> <TrendingUp className="w-4 h-4 mr-1 text-orange-500"/> <span className="font-semibold text-orange-700">{userStats.streak} day streak</span> </div> </div> </div> </div> <div className="text-right"> <div className="text-4xl font-bold text-gray-900 mb-2">{getCompletionRate().toFixed(1)}%</div> <div className="text-sm text-gray-600 mb-4">Overall Progress</div> <ProgressBar progress={getCompletionRate()} className="h-4 w-48"showValue={false} /> </div> </div> {/* Quick Stats */} <div className="grid grid-cols-1 md:grid-cols-5 gap-4"> <div className="text-center p-4 bg-gradient-to-r from-violet-50 to-fuchsia-50 rounded-xl border border-violet-200"> <div className="text-2xl font-bold text-violet-700">{getCurrentDay()}</div> <div className="text-sm text-violet-600">Current Day</div> </div> <div className="text-center p-4 bg-gradient-to-r from-green-50 to-emerald-50 rounded-xl border border-green-200"> <div className="text-2xl font-bold text-green-700">{userStats.completedMissions}/{missions.length}</div> <div className="text-sm text-green-600">Missions Done</div> </div> <div className="text-center p-4 bg-gradient-to-r from-blue-50 to-cyan-50 rounded-xl border border-blue-200"> <div className="text-2xl font-bold text-blue-700">{activeWeek}/52</div> <div className="text-sm text-blue-600">Current Week</div> </div> <div className="text-center p-4 bg-gradient-to-r from-orange-50 to-red-50 rounded-xl border border-orange-200"> <div className="text-2xl font-bold text-orange-700">{Math.round(getWeekProgress(activeWeek))}%</div> <div className="text-sm text-orange-600">Week Progress</div> </div> <div className="text-center p-4 bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl border border-purple-200"> <div className="text-2xl font-bold text-purple-700">S{getCurrentSeason()}</div> <div className="text-sm text-purple-600">Season {getCurrentSeason()}</div> {getCurrentSeason() === 1 && getSeasonProgress(1) >= 80 && ( <div className="text-xs text-purple-500 mt-1"> 🔓 Season 2 Ready! </div> )} {getCurrentSeason() === 2 && ( <div className="text-xs text-gold-500 mt-1"> 👑 Premium Active </div> )} </div> </div> {/* Season 2 Status */} {getCurrentSeason() === 1 && getSeasonProgress(1) >= 70 && ( <div className="mt-6 p-4 bg-gradient-to-r from-yellow-50 to-amber-50 border border-yellow-200 rounded-xl"> <div className="flex items-center justify-between"> <div className="flex items-center space-x-3"> <div className="w-12 h-12 bg-gradient-to-r from-yellow-400 to-amber-500 rounded-full flex items-center justify-center"> <Sparkles className="w-6 h-6 text-white"/> </div> <div> <h3 className="font-semibold text-yellow-800">Season 2: Advanced DJ Mastery</h3> <p className="text-sm text-yellow-700"> Unlock advanced techniques, international bookings, and industry partnerships </p> </div> </div> <div className="text-right"> <div className="text-sm text-yellow-700"> {getSeasonProgress(1) >= 80 ? '🎉 Available Now!' : `${Math.round(80 - getSeasonProgress(1))}% to unlock`} </div> <ProgressBar progress={Math.min(getSeasonProgress(1), 80)} className="h-2 w-32 mt-1"showValue={false} /> </div> </div> </div> )} {/* Season 2 Premium Features */} {getCurrentSeason() === 2 && ( <div className="mt-6 p-6 bg-gradient-to-r from-purple-900 to-indigo-900 border border-purple-500 rounded-xl shadow-2xl"> <div className="flex items-center justify-between mb-4"> <div className="flex items-center space-x-3"> <div className="w-12 h-12 bg-gradient-to-r from-gold-400 to-yellow-500 rounded-full flex items-center justify-center"> <Trophy className="w-6 h-6 text-white"/> </div> <div> <h3 className="font-semibold text-white">Season 2: Advanced DJ Mastery</h3> <p className="text-sm text-purple-200"> Premium content for professional DJs </p> </div> </div> <div className="text-right"> <div className="text-sm text-purple-200"> {userPremiumTier.toUpperCase()} TIER </div> <div className="text-xs text-purple-300"> {Math.round(getSeasonProgress(2))}% Complete </div> </div> </div> <div className="grid grid-cols-1 md:grid-cols-3 gap-4"> <div className="bg-white/10 rounded-lg p-3"> <div className="text-white font-semibold text-sm">🌍 International</div> <div className="text-purple-200 text-xs">Global market access</div> </div> <div className="bg-white/10 rounded-lg p-3"> <div className="text-white font-semibold text-sm">🎛️ Advanced Tech</div> <div className="text-purple-200 text-xs">Pro equipment mastery</div> </div> <div className="bg-white/10 rounded-lg p-3"> <div className="text-white font-semibold text-sm">💰 Revenue</div> <div className="text-purple-200 text-xs">Multiple income streams</div> </div> </div> </div> )} </GlassContainer> {/* Enhanced Week Navigation */} <div className="flex space-x-2 overflow-x-auto pb-2"> {Array.from({ length: 53 }, (_, i) => i).map(week => { const weekMissions = getWeekMissions(week) const progress = getWeekProgress(week) const isActive = activeWeek === week const hasContent = weekMissions.length > 0 const isUnlocked = isWeekUnlocked(week) return ( <Button key={week} variant={isActive ?"default":"outline"} size="sm"onClick={() => isUnlocked && setActiveWeek(week)} className={`whitespace-nowrap relative ${ !hasContent ? 'opacity-30' : !isUnlocked ? 'opacity-50 cursor-not-allowed' : '' }`} disabled={!hasContent || !isUnlocked} > <div className="flex flex-col items-center"> <span className="font-semibold flex items-center"> {!isUnlocked && hasContent && ( <svg className="w-3 h-3 mr-1"fill="currentColor"viewBox="0 0 20 20"> <path fillRule="evenodd"d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z"clipRule="evenodd"/> </svg> )} {week === 0 ? 'First Steps' : `Week ${week}`} </span> {progress > 0 && ( <div className="w-full bg-white/20 rounded-full h-1 mt-1"> <div className={`h-1 rounded-full transition-all duration-300 ${ isUnlocked ? 'bg-green-400' : 'bg-gray-400' }`} style={{ width: `${progress}%` }} /> </div> )} {!isUnlocked && hasContent && ( <div className="text-xs text-gray-500 mt-1"> {week === 1 ? 'Complete 50% of First Steps' : `Complete 70% of Week ${week - 1}`} </div> )} </div> </Button> ) })} </div> {/* Enhanced Mission List */} <div className="space-y-6"> <div className="flex items-center justify-between"> <h3 className="text-2xl font-semibold text-gray-900 flex items-center"> <Calendar className="w-6 h-6 mr-3"/> {activeWeek === 0 ? 'Your First Steps' : `Week ${activeWeek} Missions`} </h3> <div className="text-sm text-gray-600"> {getWeekMissions(activeWeek).filter(m => missions.find(mission => mission.id === m.id && mission.completed)).length} / {getWeekMissions(activeWeek).length} completed </div> </div> {/* Progression Info */} {activeWeek > 0 && ( <div className="bg-violet-50 border border-violet-200 rounded-lg p-4"> <div className="flex items-center space-x-2 text-violet-700"> <svg className="w-5 h-5"fill="currentColor"viewBox="0 0 20 20"> <path fillRule="evenodd"d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"clipRule="evenodd"/> </svg> <span className="font-medium">Progressive Learning System</span> </div> <p className="text-sm text-violet-600 mt-2"> Complete at least {activeWeek === 1 ? '50%' : '70%'} of the previous week's missions to unlock the next week. This ensures you build solid foundations before advancing. </p> </div> )} <div className="grid gap-6"> {getWeekMissions(activeWeek).map(mission => { const isCompleted = mission.completed const isExpanded = expandedMissions.has(mission.id) return ( <motion.div key={mission.id} initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} whileHover={{ scale: 1.02, transition: { duration: 0.2 } }} className="group"> <GlassContainer className={`transition-all duration-300 ${ isCompleted ? 'bg-gradient-to-r from-green-50 to-emerald-50 border-green-200 shadow-lg shadow-green-500/10' : 'hover:shadow-xl hover:shadow-violet-500/20 hover:border-violet-300 hover:bg-gradient-to-r hover:from-violet-50/50 hover:to-fuchsia-50/50' }`}> {/* Mission Header */} <div className="p-6 pb-4"> <div className="flex items-start justify-between"> <div className="flex items-start space-x-4 flex-1"> <motion.button onClick={() => completeMission(mission.id)} whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.95 }} className="mt-1 transition-all duration-200"disabled={isCompleted} > {isCompleted ? ( <motion.div initial={{ scale: 0 }} animate={{ scale: 1 }} transition={{ type:"spring", stiffness: 500, damping: 30 }} > <CheckCircle className="w-8 h-8 text-green-500 drop-shadow-lg"/> </motion.div> ) : ( <Circle className="w-8 h-8 text-gray-400 hover:text-violet-500 hover:drop-shadow-lg transition-all duration-200"/> )} </motion.button> <div className="flex-1"> <div className="flex items-center space-x-3 mb-3"> <h4 className={`text-xl font-semibold ${ isCompleted ? 'text-green-700 line-through' : 'text-gray-900' }`}> {mission.title} </h4> <Badge className={`${categoryColors[mission.category]} text-xs`}> <span className="flex items-center space-x-1"> {categoryIcons[mission.category]} <span className="capitalize">{mission.category}</span> </span> </Badge> <Badge variant={mission.difficulty === 'easy' ? 'secondary' : mission.difficulty === 'medium' ? 'default' : 'outline'} className="text-xs"> {mission.difficulty} </Badge> {/* Premium Badge */} {mission.isPremium && ( <Badge className="bg-gradient-to-r from-gold-400 to-yellow-500 text-white text-xs border-0"> <span className="flex items-center space-x-1"> <Trophy className="w-3 h-3"/> <span>{mission.premiumTier?.toUpperCase()}</span> </span> </Badge> )} {/* Season Badge */} {mission.season === 2 && ( <Badge className="bg-gradient-to-r from-purple-600 to-indigo-600 text-white text-xs border-0"> <span className="flex items-center space-x-1"> <Sparkles className="w-3 h-3"/> <span>S2</span> </span> </Badge> )} </div> <p className="text-gray-600 mb-4 text-lg">{mission.description}</p> <div className="flex items-center justify-between"> <div className="flex items-center space-x-6 text-sm text-gray-500"> <span className="flex items-center"> <Target className="w-4 h-4 mr-1"/> Day {mission.day} </span> <span className="flex items-center"> <Award className="w-4 h-4 mr-1"/> {mission.xp} XP </span> {mission.steps && ( <span className="flex items-center"> <CheckSquare className="w-4 h-4 mr-1"/> {mission.steps.length} steps </span> )} </div> <div className="flex items-center space-x-2"> {/* Action Instantanée - Bouton principal */} {mission.tool && !isCompleted && ( <Button size="sm"onClick={() => setShowTool({ type: mission.tool!, missionId: mission.id })} className="bg-gradient-to-r from-violet-500 to-fuchsia-500 hover:from-violet-600 hover:to-fuchsia-600 text-white font-semibold px-4 py-2 shadow-lg hover:shadow-xl transition-all duration-200"> {mission.tool === 'email-template' && ( <> <Mail className="w-4 h-4 mr-2"/> 📧 Send Email </> )} {mission.tool === 'ai-profile-analysis' && ( <> <Brain className="w-4 h-4 mr-2"/> 🧠 AI Analysis </> )} {mission.tool === 'presskit-builder' && ( <> <FileText className="w-4 h-4 mr-2"/> 📄 Build Press Kit </> )} {mission.tool === 'contact-finder' && ( <> <Users className="w-4 h-4 mr-2"/> 🔍 Find Contacts </> )} {mission.tool === 'first-steps' && ( <> <Rocket className="w-4 h-4 mr-2"/> 🚀 Get Started </> )} </Button> )} {/* Bouton de completion rapide si pas d'outil */} {!mission.tool && !isCompleted && ( <Button size="sm"onClick={() => completeMission(mission.id)} className="bg-green-500 hover:bg-green-600 text-white font-semibold px-4 py-2"> <CheckCircle className="w-4 h-4 mr-2"/> ✅ Complete </Button> )} {/* Badge de completion */} {isCompleted && ( <Badge className="bg-green-100 text-green-800 border-green-300"> <CheckCircle className="w-3 h-3 mr-1"/> Completed </Badge> )} {(mission.steps || mission.tips) && ( <Button size="sm"variant="outline"onClick={() => toggleMissionExpansion(mission.id)} className="bg-white/5"> {isExpanded ? ( <ChevronDown className="w-4 h-4"/> ) : ( <ChevronRight className="w-4 h-4"/> )} </Button> )} </div> </div> </div> </div> </div> </div> {/* Expanded Content */} <AnimatePresence> {isExpanded && ( <motion.div initial={{ height: 0, opacity: 0 }} animate={{ height: 'auto', opacity: 1 }} exit={{ height: 0, opacity: 0 }} transition={{ duration: 0.3 }} className="overflow-hidden"> <div className="px-6 pb-6 pt-2 border-t border-white/10"> {mission.steps && ( <div className="mb-4"> <h5 className="font-semibold text-gray-900 mb-2 flex items-center"> <CheckSquare className="w-4 h-4 mr-2"/> Steps to complete </h5> <ul className="space-y-2"> {mission.steps.map((step, index) => ( <li key={index} className="flex items-start text-sm text-gray-600"> <span className="w-6 h-6 bg-violet-500/20 text-violet-400 rounded-full flex items-center justify-center text-xs font-bold mr-3 mt-0.5 flex-shrink-0"> {index + 1} </span> {step} </li> ))} </ul> </div> )} {mission.tips && ( <div className="mb-4"> <h5 className="font-semibold text-gray-900 mb-2 flex items-center"> <Lightbulb className="w-4 h-4 mr-2"/> Pro Tips </h5> <ul className="space-y-2"> {mission.tips.map((tip, index) => ( <li key={index} className="flex items-start text-sm text-gray-600"> <span className="text-yellow-400 mr-2 mt-0.5">💡</span> {tip} </li> ))} </ul> </div> )} {mission.resources && ( <div> <h5 className="font-semibold text-gray-900 mb-2 flex items-center"> <FileText className="w-4 h-4 mr-2"/> Resources </h5> <div className="grid grid-cols-1 md:grid-cols-2 gap-2"> {mission.resources.map((resource, index) => ( <a key={index} href={resource.url} target="_blank"rel="noopener noreferrer"className="flex items-center p-2 bg-white/5 rounded-lg hover:bg-white/10 transition-colors text-sm"> <span className="mr-2"> {resource.type === 'video' && '🎥'} {resource.type === 'article' && '📖'} {resource.type === 'tool' && '🛠️'} {resource.type === 'template' && '📋'} </span> <span className="text-gray-900">{resource.title}</span> <ArrowRight className="w-3 h-3 ml-auto text-gray-400"/> </a> ))} </div> </div> )} </div> </motion.div> )} </AnimatePresence> </GlassContainer> </motion.div> ) })} </div> </div> {/* Enhanced Roadmap */} <DJRoadmap completedMissions={new Set(missions.filter(m => m.completed).map(m => m.id))} totalMissions={missions.length} djLevel={djLevel} totalXP={userStats.totalXP} /> {/* Enhanced Tool Modals */} {showTool && ( <Modal isOpen={true} onClose={() => setShowTool(null)} title={`${missions.find(m => m.id === showTool.missionId)?.title}`} className="max-w-6xl"> <div className="p-6"> {showTool.type === 'email-template' && ( <ContextualEmailTemplates context="venue-inquiry"onComplete={() => { setShowTool(null) completeMission(showTool.missionId) }} userProfile={{ name: 'DJ Name', city: 'Paris', genre: 'House', experience: 'Beginner' }} /> )} {showTool.type === 'ai-profile-analysis' && ( <div className="space-y-6"> <div className="text-center mb-6"> <h3 className="text-2xl font-bold text-gray-900 mb-2"> AI Profile Analysis </h3> <p className="text-gray-600"> Upload screenshots of your social media profiles for detailed analysis and recommendations </p> </div> <div className="bg-gray-50 rounded-xl p-6"> <AIProfileAnalysis /> </div> <div className="text-center pt-4"> <Button onClick={() => { setShowTool(null) completeMission(showTool.missionId) }} className="bg-gradient-to-r from-violet-500 to-fuchsia-500 text-white"> Complete Mission </Button> </div> </div> )} {showTool.type === 'presskit-builder' && ( <PresskitBuilder onComplete={() => { setShowTool(null) completeMission(showTool.missionId) }} /> )} {showTool.type === 'contact-finder' && ( <ContactFinderTool onComplete={() => { setShowTool(null) completeMission(showTool.missionId) }} /> )} {showTool.type === 'first-steps' && ( <div className="space-y-6"> <div className="text-center"> <h3 className="text-2xl font-bold text-gray-900 mb-2"> Welcome to Your DJ Journey! </h3> <p className="text-gray-600"> Let's get you started with the basics </p> </div> <div className="grid grid-cols-1 md:grid-cols-2 gap-6"> <div className="bg-gray-50 rounded-xl p-6"> <h4 className="font-semibold text-gray-900 mb-4">Quick Setup</h4> <ul className="space-y-3"> <li className="flex items-center text-sm text-gray-600"> <CheckCircle className="w-4 h-4 text-green-500 mr-2"/> Complete your profile </li> <li className="flex items-center text-sm text-gray-600"> <CheckCircle className="w-4 h-4 text-green-500 mr-2"/> Set your music preferences </li> <li className="flex items-center text-sm text-gray-600"> <CheckCircle className="w-4 h-4 text-green-500 mr-2"/> Choose your goals </li> </ul> </div> <div className="bg-gray-50 rounded-xl p-6"> <h4 className="font-semibold text-gray-900 mb-4">What's Next?</h4> <ul className="space-y-3"> <li className="flex items-center text-sm text-gray-600"> <ArrowRight className="w-4 h-4 text-violet-500 mr-2"/> Analyze your social media </li> <li className="flex items-center text-sm text-gray-600"> <ArrowRight className="w-4 h-4 text-violet-500 mr-2"/> Set up your workspace </li> <li className="flex items-center text-sm text-gray-600"> <ArrowRight className="w-4 h-4 text-violet-500 mr-2"/> Start Week 1 missions </li> </ul> </div> </div> <div className="text-center"> <Button onClick={() => { setShowTool(null) completeMission(showTool.missionId) }} className="bg-gradient-to-r from-violet-500 to-fuchsia-500 text-white"> <Rocket className="w-4 h-4 mr-2"/> Start Your Journey </Button> </div> </div> )} </div> </Modal> )} {/* AI Feedback Modal */} {showAiFeedback && ( <Modal isOpen={true} onClose={() => setShowAiFeedback(null)} title="🎉 Mission Complete!"className="max-w-2xl"> <div className="p-6 text-center"> <div className="mb-6"> <div className="w-20 h-20 bg-gradient-to-r from-green-400 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-4"> <Trophy className="w-10 h-10 text-white"/> </div> <h3 className="text-2xl font-bold text-gray-900 mb-2"> Great Job! </h3> </div> <div className="bg-gradient-to-r from-violet-50 to-fuchsia-50 rounded-xl p-6 mb-6"> <p className="text-gray-700 text-lg leading-relaxed"> {showAiFeedback} </p> </div> <div className="flex items-center justify-center space-x-4 mb-6"> <div className="flex items-center bg-violet-100 rounded-full px-4 py-2"> <Zap className="w-5 h-5 text-violet-500 mr-2"/> <span className="text-violet-700 font-semibold">+{userStats.totalXP} XP</span> </div> <div className="flex items-center bg-green-100 rounded-full px-4 py-2"> <Award className="w-5 h-5 text-green-500 mr-2"/> <span className="text-green-700 font-semibold">Level {userStats.level}</span> </div> </div> <Button onClick={() => setShowAiFeedback(null)} className="bg-gradient-to-r from-violet-500 to-fuchsia-500 text-white px-8 py-3 text-lg font-semibold"> Continue Journey 🚀 </Button> </div> </Modal> )} {/* Celebration Effect */} <AnimatePresence> {celebrationEffect.show && ( <motion.div initial={{ opacity: 0, scale: 0.5, y: 0 }} animate={{ opacity: [0, 1, 1, 0], scale: [0.5, 1.2, 1, 0.8], y: [-20, -60, -80, -100] }} exit={{ opacity: 0, scale: 0 }} transition={{ duration: 2, ease:"easeOut"}} className="fixed z-50 pointer-events-none"style={{ left: celebrationEffect.position.x, top: celebrationEffect.position.y, }} > <div className="bg-gradient-to-r from-violet-500 to-fuchsia-500 text-white px-6 py-3 rounded-full shadow-2xl flex items-center space-x-2"> <Sparkles className="w-6 h-6"/> <span className="font-bold text-xl">+{celebrationEffect.xp} XP</span> <Trophy className="w-6 h-6"/> </div> {/* Confetti particles */} <div className="absolute inset-0 pointer-events-none"> {[...Array(8)].map((_, i) => ( <motion.div key={i} initial={{ opacity: 1, scale: 1 }} animate={{ opacity: [1, 0], scale: [1, 0.3], x: [(Math.random() - 0.5) * 200], y: [(Math.random() - 0.5) * 200], }} transition={{ duration: 1.5, delay: i * 0.1, ease:"easeOut"}} className="absolute w-2 h-2 rounded-full"style={{ backgroundColor: ['#8B5CF6', '#EC4899', '#10B981', '#F59E0B', '#EF4444'][i % 5], left: '50%', top: '50%', }} /> ))} </div> </motion.div> )} </AnimatePresence> </div> ) } 